<Activity mc:Ignorable="sap sap2010" x:Class="Output_Results" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="option_1" Type="InArgument(x:String)" />
    <x:Property Name="option_2" Type="InArgument(x:String)" />
    <x:Property Name="option_3" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Output_Results_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Word.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>BalaReva.Word.Utilities</x:String>
      <x:String>BalaReva.Word.Tables</x:String>
      <x:String>BalaReva.Word</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>BalaReva.Word.Utilities</AssemblyReference>
      <AssemblyReference>BalaReva.Word.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Output_Results" sap:VirtualizedContainerService.HintSize="712.8000000000001,6751.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <p:WordApplicationScope SensitivityLabel="{x:Null}" sap2010:Annotation.AnnotationText="Overwrite placeholders, insert datatable and paste user's travel itinerary into word documen.t" AutoSave="False" CreateNewFile="False" DisplayName="Modify results template " FilePath="Resources\Flight Inquiry Details.docx" sap:VirtualizedContainerService.HintSize="604.8,6728" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1" SensitivityOperation="None">
      <p:WordApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WordDocument">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="571.2,6564" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="User template in word to input information into specified locations" DisplayName="Replace placeholders with user's input" sap:VirtualizedContainerService.HintSize="537.6,3820" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace from_location" sap:VirtualizedContainerService.HintSize="468.8,196.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_1" Replace="[from_location]" ReplaceAll="False" Search="{}{from_location}">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:WordReplaceText>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace to_location" sap:VirtualizedContainerService.HintSize="468.8,196.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_2" Replace="[to_location]" ReplaceAll="False" Search="{}{to_location}">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:WordReplaceText>
              <If sap2010:Annotation.AnnotationText="Add in details relevant to a return trip" Condition="[flight_return]" DisplayName="If flight_return = true" sap:VirtualizedContainerService.HintSize="468.8,1059.2" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,444.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace trip_type" sap:VirtualizedContainerService.HintSize="433.6,196.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_4" Replace="Round-trip" ReplaceAll="False" Search="{}{trip_type}" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace end_date" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="WordReplaceText_9" Replace="[&quot;to &quot; + end_date.ToString(&quot;dddd, dd MMMM yyyy&quot;)]" ReplaceAll="False" Search="{}{end_date}" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,444.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace trip_type" sap:VirtualizedContainerService.HintSize="433.6,196.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_5" Replace="One-way" ReplaceAll="False" Search="{}{trip_type}" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace end_date" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="WordReplaceText_10" ReplaceAll="False" Search="{}{end_date}">
                      <p:WordReplaceText.Replace>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </p:WordReplaceText.Replace>
                    </p:WordReplaceText>
                  </Sequence>
                </If.Else>
              </If>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace trip_duration" sap:VirtualizedContainerService.HintSize="468.8,196.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_6" Replace="[trip_duration.ToString()]" ReplaceAll="False" Search="{}{trip_duration}">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:WordReplaceText>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace start_date" sap:VirtualizedContainerService.HintSize="468.8,196.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_7" Replace="[start_date.ToString(&quot;dddd, dd MMMM yyyy&quot;)]" ReplaceAll="False" Search="{}{start_date}">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:WordReplaceText>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace cabin_class" sap:VirtualizedContainerService.HintSize="468.8,196.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_11" Replace="[cabin_class]" ReplaceAll="False" Search="{}{cabin_class}">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:WordReplaceText>
              <If Condition="[direct_flight]" DisplayName="If direct_flight = true" sap:VirtualizedContainerService.HintSize="468.8,634.4" sap2010:WorkflowViewState.IdRef="If_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,248" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace direct_flights" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="WordReplaceText_12" Replace="Yes" ReplaceAll="False" Search="{}{direct_flights}" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,248" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace direct_flights" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="WordReplaceText_13" Replace="No" ReplaceAll="False" Search="{}{direct_flights}" />
                  </Sequence>
                </If.Else>
              </If>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace num_trav" sap:VirtualizedContainerService.HintSize="468.8,196.8" sap2010:WorkflowViewState.IdRef="WordReplaceText_14" Replace="[num_travellers.ToString]" ReplaceAll="False" Search="{}{num_trav}">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:WordReplaceText>
              <If Condition="[results_type.Contains(&quot; &quot;)]" DisplayName="If results_type contains space" sap:VirtualizedContainerService.HintSize="468.8,634.4" sap2010:WorkflowViewState.IdRef="If_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then use substring" sap:VirtualizedContainerService.HintSize="467.2,248" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace result_type" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="WordReplaceText_25" Replace="[results_type.Substring(0, results_type.IndexOf(&quot; &quot;))]" ReplaceAll="False" Search="{}{result_type}">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p:WordReplaceText>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,248" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace result_type" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="WordReplaceText_26" Replace="[results_type]" ReplaceAll="False" Search="{}{result_type}">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p:WordReplaceText>
                  </Sequence>
                </If.Else>
              </If>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace user's choice" sap:VirtualizedContainerService.HintSize="468.8,188" sap2010:WorkflowViewState.IdRef="WordReplaceText_27" Replace="[(user_choice + 1).ToString]" ReplaceAll="True" Search="{}{option_num}" />
            </Sequence>
            <p:WordAppendText sap2010:Annotation.AnnotationText="Append AI generated travel plan at the end of the document" DisplayName="Append generated travel plan" sap:VirtualizedContainerService.HintSize="537.6,169.6" sap2010:WorkflowViewState.IdRef="WordAppendText_2" NewLine="False" Text="[str_travel_plan]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:WordAppendText>
            <Sequence DisplayName="Write top 3 results to word file" sap:VirtualizedContainerService.HintSize="537.6,1856.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[flight_return]" DisplayName="If flight_return = true" sap:VirtualizedContainerService.HintSize="504,1764.8" sap2010:WorkflowViewState.IdRef="If_4">
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="502.4,817.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each currentNumber" sap:VirtualizedContainerService.HintSize="468.8,757.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Enumerable.Range(0, 3)]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:Int32">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="currentNumber" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,636" sap2010:WorkflowViewState.IdRef="Sequence_20">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p:WordReplaceText Found="{x:Null}" sap2010:Annotation.AnnotationText="Fill in with details from the datable" DisplayName="Replace {result_currentNumber}" sap:VirtualizedContainerService.HintSize="433.6,228" sap2010:WorkflowViewState.IdRef="WordReplaceText_23" Replace="[&quot;Depart: &quot; + search_results.Rows(currentNumber)(&quot;Departure Date&quot;).ToString + &quot; from &quot; + search_results.Rows(currentNumber)(&quot;(D) From: Airport Code&quot;).ToString + &quot; to &quot; + search_results.Rows(currentNumber)(&quot;(D) To: Airport Code&quot;).ToString + Environment.NewLine +&#xA;&quot;Flight: &quot; +  search_results.Rows(currentNumber)(&quot;(D) Take-off Time&quot;).ToString + &quot; to &quot; + search_results.Rows(currentNumber)(&quot;(D) Landing Time&quot;).ToString + &quot;(Total: &quot; + search_results.Rows(currentNumber)(&quot;(D) Travel Time&quot;).ToString + &quot;)&quot; + Environment.NewLine +&#xA;&quot;Stops: &quot; +  search_results.Rows(currentNumber)(&quot;(D) Stops&quot;).ToString + &quot; (&quot; + search_results.Rows(currentNumber)(&quot;(D) Stops: Airport Code(s)&quot;).ToString + &quot;)&quot; + Environment.NewLine + Environment.NewLine +&#xA;&quot;Return: &quot; + search_results.Rows(currentNumber)(&quot;Return Date&quot;).ToString + &quot; from &quot; + search_results.Rows(currentNumber)(&quot;(R) From: Airport Code&quot;).ToString + &quot; to &quot; + search_results.Rows(currentNumber)(&quot;(R) To: Airport Code&quot;).ToString + Environment.NewLine +&#xA;&quot;Flight: &quot; +  search_results.Rows(currentNumber)(&quot;(R) Take-off Time&quot;).ToString + &quot; to &quot; + search_results.Rows(currentNumber)(&quot;(R) Landing Time&quot;).ToString + &quot;(Total: &quot; + search_results.Rows(currentNumber)(&quot;(R) Travel Time&quot;).ToString + &quot;)&quot; + Environment.NewLine +&#xA;&quot;Stops: &quot; +  search_results.Rows(currentNumber)(&quot;(R) Stops&quot;).ToString + &quot; (&quot; + search_results.Rows(currentNumber)(&quot;(R) Stops: Airport Code(s)&quot;).ToString + &quot;)&quot; + Environment.NewLine + Environment.NewLine +&#xA;&quot;Approx Price: &quot; +  search_results.Rows(currentNumber)(&quot;Approx Price&quot;).ToString + Environment.NewLine + Environment.NewLine +&#xA;&quot;{link_&quot; + currentNumber.ToString + &quot;}&quot;]" ReplaceAll="True" Search="[String.Format(&quot;[result_{0}]&quot;, currentNumber + 1)]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:WordReplaceText>
                            <p:WordInsertHyperlink Found="{x:Null}" Address="[search_results.Rows(currentNumber)(&quot;Link&quot;).ToString]" sap2010:Annotation.AnnotationText="Add a link to the skyscanner site for the flights" DisplayName="Add Hyperlink to Document" sap:VirtualizedContainerService.HintSize="433.6,348" sap2010:WorkflowViewState.IdRef="WordInsertHyperlink_1" InsertRelativeTo="Text" Position="Replace" TextToDisplay="Click here for link." TextToSearchFor="[&quot;{link_&quot; + currentNumber.ToString + &quot;}&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:WordInsertHyperlink>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="502.4,817.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each currentNumber" sap:VirtualizedContainerService.HintSize="468.8,757.6" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Enumerable.Range(0, 3)]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:Int32">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="currentNumber" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,636" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p:WordReplaceText Found="{x:Null}" sap2010:Annotation.AnnotationText="Fill in with details from the datable" DisplayName="Replace {result_currentNumber}" sap:VirtualizedContainerService.HintSize="433.6,228" sap2010:WorkflowViewState.IdRef="WordReplaceText_24" Replace="[&quot;Depart: &quot; + search_results.Rows(currentNumber)(&quot;Departure Date&quot;).ToString + &quot; from &quot; + search_results.Rows(currentNumber)(&quot;(D) From: Airport Code&quot;).ToString + &quot; to &quot; + search_results.Rows(currentNumber)(&quot;(D) To: Airport Code&quot;).ToString + Environment.NewLine +&#xA;&quot;Flight: &quot; +  search_results.Rows(currentNumber)(&quot;(D) Take-off Time&quot;).ToString + &quot; to &quot; + search_results.Rows(currentNumber)(&quot;(D) Landing Time&quot;).ToString + &quot;(Total: &quot; + search_results.Rows(currentNumber)(&quot;(D) Travel Time&quot;).ToString + &quot;)&quot; + Environment.NewLine +&#xA;&quot;Stops: &quot; +  search_results.Rows(currentNumber)(&quot;(D) Stops&quot;).ToString + &quot; (&quot; + search_results.Rows(currentNumber)(&quot;(D) Stops: Airport Code(s)&quot;).ToString + &quot;)&quot; + Environment.NewLine + Environment.NewLine +&#xA;&quot;Approx Price: &quot; +  search_results.Rows(currentNumber)(&quot;Approx Price&quot;).ToString]" ReplaceAll="True" Search="[String.Format(&quot;[result_{0}]&quot;, currentNumber + 1)]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:WordReplaceText>
                            <p:WordInsertHyperlink Found="{x:Null}" Address="[search_results.Rows(currentNumber)(&quot;Link&quot;).ToString]" sap2010:Annotation.AnnotationText="Add link to the skyscanner website for the flights" DisplayName="Add Hyperlink to Document" sap:VirtualizedContainerService.HintSize="433.6,348" sap2010:WorkflowViewState.IdRef="WordInsertHyperlink_2" InsertRelativeTo="Text" Position="Replace" TextToDisplay="Click here for link." TextToSearchFor="[&quot;{link_&quot; + currentNumber.ToString + &quot;}&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:WordInsertHyperlink>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Save document for user's access" DisplayName="Save doc as docx and pdf" sap:VirtualizedContainerService.HintSize="537.6,657.6" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <p:WordSaveAs sap2010:Annotation.AnnotationText="Save the raw file to allow user access to edit" DisplayName="Save Word Document" FilePath="[&quot;Results\&quot; + &quot;myItinerary_&quot; + DateTime.Now.ToString(&quot;dd_MM_yyyy HH_mm&quot;) + &quot;.docx&quot;]" sap:VirtualizedContainerService.HintSize="433.6,232.8" sap2010:WorkflowViewState.IdRef="WordSaveAs_1" ReplaceExisting="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:WordSaveAs>
              <Assign sap2010:Annotation.AnnotationText="Save pdf file name to open later at end of RPA" DisplayName="Save pdf file name" sap:VirtualizedContainerService.HintSize="433.6,144.8" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[GlobalVariablesNamespace.GlobalVariables.pdf_file]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">["Results\" + "myItinerary_" + DateTime.Now.ToString("dd_MM_yyyy HH_mm") + ".pdf"]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <p:WordExportToPdf sap2010:Annotation.AnnotationText="Save as pdf to show compiled results at end of result" DisplayName="Save Document as PDF" FilePath="[pdf_file]" sap:VirtualizedContainerService.HintSize="433.6,165.6" sap2010:WorkflowViewState.IdRef="WordExportToPdf_1" ReplaceExisting="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:WordExportToPdf>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </p:WordApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p:WordApplicationScope>
  </Sequence>
</Activity>